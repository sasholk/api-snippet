services:
  app:
    container_name: snippet-nest-app
    build:
      context: .
      dockerfile: Dockerfile
      target: builder # Use the builder stage for development
    command: pnpm start:dev
    ports:
      - '${PORT}:3000'
    volumes:
      - ./src:/app/src
      - ./test:/app/test
      - /app/node_modules
    env_file:
      - .env.dev
    environment:
      - DB_HOST=${DB_HOST}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - postgres
      - redis
    networks:
      - snippet-network
    restart: unless-stopped

  postgres:
    container_name: snippet-nest-postgres
    image: postgres:16-alpine
    ports:
      - '${DB_PORT}:5432'
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - snippet-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: snippet-nest-redis
    image: redis:7-alpine
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - redis_data:/data
    networks:
      - snippet-network
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  snippet-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
